{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/add-appiontment.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction AddAppointmentComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const Doctor_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(Doctor_r2.DoctorName);\n  }\n}\n\nfunction AddAppointmentComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const department_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", department_r3.Department, \" \");\n  }\n}\n\nexport let AddAppointmentComponent = /*#__PURE__*/(() => {\n  class AddAppointmentComponent {\n    // Variable declaration and initialization\n    // Dependency Injection inside constructor\n    constructor(addAppointments) {\n      this.addAppointments = addAppointments;\n      this.addForm = new FormGroup({\n        AppointmentID: new FormControl(\"\", Validators.required),\n        AppointmentDate: new FormControl(\"\", Validators.required),\n        AppointmentTime: new FormControl(\"\", Validators.required),\n        DoctorName: new FormControl(\"\", Validators.required),\n        Department: new FormControl(\"\", Validators.required),\n        PetOwnerName: new FormControl(\"\", Validators.required)\n      });\n    }\n\n    ngOnInit() {\n      // Fetch / Load data\n      // Validation Logic\n      this.fetchAppointmentsData();\n      this.savedata();\n    }\n\n    get add() {\n      return this.addForm.controls;\n    }\n\n    fetchAppointmentsData() {\n      return this.addAppointments.GetAppointmentData().subscribe(resp => {\n        this.DataAppointments = resp;\n      });\n    }\n\n    savedata() {\n      return this.addAppointments.postAppointmentData(this.addForm.value).subscribe(resp => {\n        console.log(resp);\n        alert('Appointment added successfully...');\n        window.location.reload();\n      }); // Logic for the submit\n    }\n\n  }\n\n  AddAppointmentComponent.ɵfac = function AddAppointmentComponent_Factory(t) {\n    return new (t || AddAppointmentComponent)(i0.ɵɵdirectiveInject(i1.AddAppiontmentService));\n  };\n\n  AddAppointmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddAppointmentComponent,\n    selectors: [[\"app-add-appointment\"]],\n    decls: 37,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"disabledTextInput\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"disabledTextInput\", \"formControlName\", \"AppointmentID\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"date\", \"id\", \"disabledTextInput\", \"formControlName\", \"AppointmentDate\", \"min\", \"2023-03-02\", \"max\", \"2023-03-31\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"time\", \"id\", \"disabledTextInput\", \"formControlName\", \"AppointmentTime\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"disabledSelect\", 1, \"form-label\"], [\"formControlName\", \"DoctorName\", \"ngModel\", \"\", 1, \"form-select\"], [\"selected\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"Department\", \"ngModel\", \"\", 1, \"form-select\"], [\"for\", \"disabledTextInput\", \"ngModel\", \"\", 1, \"form-label\"], [\"id\", \"floatingTextarea\", \"formControlName\", \"PetOwnerName\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mb-3\"]],\n    template: function AddAppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddAppointmentComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.savedata();\n        });\n        i0.ɵɵelementStart(3, \"h4\");\n        i0.ɵɵtext(4, \"Appointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"AppointmentID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n        i0.ɵɵtext(11, \"AppointmentDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 4);\n        i0.ɵɵtext(15, \"AppointmentTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 8);\n        i0.ɵɵtext(19, \"DoctorName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"select\", 9)(21, \"option\", 10);\n        i0.ɵɵtext(22, \"--Select Doctor--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, AddAppointmentComponent_option_23_Template, 2, 1, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 8);\n        i0.ɵɵtext(26, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"select\", 12)(28, \"option\", 10);\n        i0.ɵɵtext(29, \"--Select Department--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, AddAppointmentComponent_option_30_Template, 2, 1, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 3)(32, \"label\", 13);\n        i0.ɵɵtext(33, \"PetOwnerName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"label\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"button\", 15);\n        i0.ɵɵtext(36, \"Create\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DataAppointments);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.DataAppointments);\n      }\n    },\n    dependencies: [i2.NgForOf]\n  });\n  return AddAppointmentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}